go.property("acceleration", 100)
go.property("deceleration", 200)
go.property("max_speed", 400)
-- include <dmsdk/dlib/time.h>
-- 
function init(self)
	-- ask user to do their thing
	msg.post(".", "acquire_input_focus")
	msg.post("#camera", "acquire_camera_focus")
	msg.post("@render:", "use_fixed_projection", { zoom = 0.75, near = -1, far = 1 })

	-- ask user to input movement
	self.vel = vmath.vector3()

	-- current speed
	-- self.speed = 0
end

function update(self, dt)
	if self.vel.x == 0 then
		-- sprite.play_flipbook("#ratSprite", hash("rat2"))
	end
	-- -- is the user clicking anything? is there anything for the character to sense?
	-- if self.input ~= 0 then
	-- 	-- set the travel direction
	-- 	self.direction = self.input
	-- 	-- set change in speed
	-- 	self.speed = self.speed + self.acceleration * dt
	-- 	-- don't let speed get any higher than this 
	-- 	self.speed = math.min(self.speed, self.max.speed)
	-- 	-- sprite.play_flipbook("#ratSprite", hash("ratRun"))
	-- 	self.input = 1
	-- else
	-- 	-- sprite.play_flipbook("#ratSprite", hash("ratRun"))
	-- 	--lower the speed 
	-- 	self.speed = self.speed - self.deceleration * dt 
	-- 	self.speed = math.max(self.speed, 0)
	-- end 

	--move
	-- local p = go.get_position()
	-- p = p + self.direction * self.speed
	-- go.set_position(p)
	-- sprite.play_flipbook("#ratSprite", hash("rat2"))

	-- self.input = vmath.vector()
end

function on_input(self, action_id, action)
	local pos = go.get_position()
	-- pos = pos + self.vel * dt
	-- go.set_position(pos)
	
	-- update direction of movement based on pressed keys
	if action_id == hash("right") then
		-- self.input = 0
		-- sprite.play_flipbook("#ratSprite", hash("ratRun"))
		sprite.set_hflip("#ratSprite", true)
		self.vel.x = 3
		go.set_position(pos + self.vel)
	elseif action_id == hash("left") then
		-- self.input = 0
		-- sprite.play_flipbook("#ratSprite", hash("ratRun"))
		sprite.set_hflip("#ratSprite", false)
		self.vel.x = -3
		go.set_position(pos + self.vel)
	end

	self.vel.x = 0
	-- local p = go.get_position()
	-- p = p + self.direction * self.speed
	-- go.set_position(p)
	-- dmTime::Sleep(1)
	-- sprite.play_flipbook("#ratSprite", hash("rat2"))

	-- self.input = vmath.vector()

	
	-- sleep(1)
end